/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_schwarzrot_system_CommandWriter */

#ifndef _Included_de_schwarzrot_system_CommandWriter
#define _Included_de_schwarzrot_system_CommandWriter
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    homeAxis
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_homeAxis
  (JNIEnv *, jobject, jint);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    init
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_schwarzrot_system_CommandWriter_init
  (JNIEnv *, jobject);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    loadTaskPlan
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_loadTaskPlan
  (JNIEnv *, jobject, jstring);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    loadToolTable
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_loadToolTable
  (JNIEnv *, jobject, jstring);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    sendMDICommand
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_sendMDICommand
  (JNIEnv *, jobject, jstring);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    setAuto
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_setAuto
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    setBlockDelete
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_setBlockDelete
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    setFeedOverride
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_setFeedOverride
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    setFixture
 * Signature: (IDDDDDDDDD)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_setFixture
  (JNIEnv *, jobject, jint, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    setFlood
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_setFlood
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    setMist
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_setMist
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    setOffset
 * Signature: (DDDDDDDDD)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_setOffset
  (JNIEnv *, jobject, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    setOptionalStop
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_setOptionalStop
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    setRapidOverride
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_setRapidOverride
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    setSpindle
 * Signature: (ZII)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_setSpindle
  (JNIEnv *, jobject, jboolean, jint, jint);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    setSpindleOverride
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_setSpindleOverride
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    setTaskMode
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_setTaskMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    setTaskState
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_setTaskState
  (JNIEnv *, jobject, jint);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    taskAbort
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_taskAbort
  (JNIEnv *, jobject);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    updatePosition
 * Signature: (Lde/schwarzrot/model/CanonPosition;)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_updatePosition
  (JNIEnv *, jobject, jobject);

/*
 * Class:     de_schwarzrot_system_CommandWriter
 * Method:    updateToolSettings
 * Signature: (Lde/schwarzrot/bean/ToolEntry;)V
 */
JNIEXPORT void JNICALL Java_de_schwarzrot_system_CommandWriter_updateToolSettings
  (JNIEnv *, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
